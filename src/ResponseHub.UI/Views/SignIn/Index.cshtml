@model Enivate.ResponseHub.UI.Models.SignIn.SignInViewModel
@{
    ViewBag.Title = "Sign in";
	ViewBag.BodyClass = "sign-in";
}

<h1>@ViewBag.Title</h1>

@Html.SuccessFromQueryString("sign_in_complete", "1", "The member has been successfully signed in.")

<form action="@Request.Url" method="post" id="sign-in-form">

	@Html.AntiForgeryToken()

	@Html.ValidationSummary()

	@Html.HiddenFor(model => model.UnitId)
	
	@if (Model.AvailableUsers != null && Model.AvailableUsers.Count > 0)
	{
		<div class="form-group">
			<label for="TrainingType">Member to sign in *</label>
			<div class="row">
				<div class="col-sm-8 col-md-6 col-lg-4">
					<select class="form-control selectpicker" data-live-search="true" id="UserId" name="UserId" title="Select member...">
						@foreach (var user in Model.AvailableUsers)
						{
							<option data-tokens="@user.Text" value="@user.Value">@user.Text</option>
						}
					</select>
						
				</div>
			</div>
			@Html.ValidationMessageFor(model => model.UserId)
		</div>
	}
	else
	{
		@Html.HiddenFor(model => model.UserId)
	}

	<div class="form-group">
		<label for="StartDate">Start date *</label>
		<div class="row">
			<div class="col-sm-8 col-md-6 col-lg-4">
				<div class="input-group date datepicker-control" data-provide="datepicker" data-date-format="yyyy-mm-dd" data-date-autoclose="true" data-date-show-on-focus="false">
					@Html.TextBoxFor(model => model.StartDate, new { @class = "form-control" })
					<div class="input-group-addon">
						<i class="fa fa-fw fa-calendar"></i>
					</div>
				</div>
				<div class="text-muted"><em>Date format should be yyyy-mm-dd.</em></div>
			</div>
		</div>
		@Html.ValidationMessageFor(model => model.StartDate)
	</div>

	<div class="form-group">
		<label for="StartTime">Start time *</label>
		<div class="row">
			<div class="col-sm-8 col-md-6 col-lg-4">
				<div class="input-group timepicker-control">
					@Html.TextBoxFor(model => model.StartTime, new { @class = "form-control" })
					<div class="input-group-addon">
						<i class="fa fa-fw fa-clock-o"></i>
					</div>
				</div>
				<div class="text-muted"><em>Date format should be hh:mm and in 24 hour time.</em></div>
			</div>
		</div>
		@Html.ValidationMessageFor(model => model.StartTime)
	</div>

	<div class="form-group">
		<h3>Sign in type *</h3>
		<div class="row">
			<div class="col-sm-12 graphic-radio">
				<label class="radio-inline" for="SignInType1">
					<input type="radio" name="SignInType" id="SignInType1" value="1" checked="checked" onclick="responseHub.signIn.setActivityDetails('operation');">
					Operation
				</label>
				<label class="radio-inline" for="SignInType2">
					<input type="radio" name="SignInType" id="SignInType2" value="2" onclick="responseHub.signIn.setActivityDetails('training');">
					Training
				</label>
				<label class="radio-inline" for="SignInType4">
					<input type="radio" name="SignInType" id="SignInType4" value="4" onclick="responseHub.signIn.setActivityDetails('other');">
					Other
				</label>
			</div>
		</div>
		@Html.ValidationMessageFor(model => model.SignInType)
		<div class="training-types-messages">
			@Html.ValidationMessageFor(model => model.OperationDescription)
			@Html.ValidationMessageFor(model => model.TrainingDescription)
			@Html.ValidationMessageFor(model => model.SignInTypeOther)
		</div>
	</div>

	<div id="operation-task">
		<p><strong>Operation details</strong></p>
		<p>Enter a description for the operation or select one below:</p>
		<div class="form-group row">
			<div class="col-sm-8 col-md-6 col-lg-4">
				@Html.TextBoxFor(model => model.OperationDescription, new { @class = "form-control", placeholder = "Rescue, tree down, job number..." })
			</div>
		</div>
		@Html.HiddenFor(model => model.OperationJobId)
		<div class="sign-on-operation">
			@foreach (var job in Model.AvailableOperations)
			{
				<div class="row">
					<div class="col-lg-10 col-xl-9 radio graphic-radio">
						<label onclick="responseHub.signIn.setOperationJobNumber('@job.JobNumber', '@job.JobId');">
							<input type="radio" name="OperationList" id="Operation_@job.JobId" value="@job.JobId">
							@job.Description <br /><span class="sign-in-operation-date small text-muted">@job.Timestamp.ToString("yyyy-MM-dd HH:mm")</span>
						</label>
					</div>
				</div>
			}

		</div>
	</div>

	<div id="training-task" class="hidden">
		<p><strong>Training details</strong></p>

		<div class="form-group">
			<label for="TrainingDescription">Training description:</label>
			<div class="row">
				<div class="col-sm-8 col-md-6 col-lg-4">
					@Html.TextBoxFor(model => model.TrainingDescription, new { @class = "form-control", placeholder = "Training course, session etc." })
				</div>
			</div>
		</div>

	</div>

	<div id="other-task" class="hidden">
		<p><strong>Other details</strong></p>

		<div class="form-group">
			<label for="TrainingType">Sign in type</label>
			<div class="row">
				<div class="col-sm-8 col-md-6 col-lg-4">
					@Html.DropDownListFor(model => model.SignInTypeOther, Model.AvailableOtherTypes, new { @class = "form-control selectpicker", @data_live_search = "true", @title = "Select type..." })
				</div>
			</div>
		</div>

		<div class="form-group other-type-other hidden">
			<label for="OtherTypeDescription">Other:</label>
			<div class="row">
				<div class="col-sm-8 col-md-6 col-lg-4">
					@Html.TextBoxFor(model => model.OtherTypeDescription, new { @class = "form-control", placeholder = "" })
				</div>
			</div>
		</div>

	</div>

	<div class="top-20">
		<button type="submit" class="btn btn-primary btn-mobile-block btn-icon"><i class="fa fa-sign-in"></i>Sign in</button>
	</div>

</form>