@model Enivate.ResponseHub.UI.Models.Messages.JobMessageViewModel

@{
	ViewBag.Title = (!String.IsNullOrEmpty(Model.JobNumber) ? Model.JobNumber : Model.Timestamp.ToString("dd/MM/yyyy HH:mm:ss"));
}

@Html.HiddenFor(i => i.Id)
@Html.HiddenFor(i => i.Version)

<div class="row">
	<div class="col-sm-7">

		<h1>
			@if (Model.Priority == Enivate.ResponseHub.Model.Messages.MessagePriority.Emergency)
			{
				<i class="fa fa-exclamation-triangle p-message-emergency"></i>
			}
			else if (Model.Priority == Enivate.ResponseHub.Model.Messages.MessagePriority.NonEmergency)
			{
				<i class="fa fa-exclamation-circle p-message-non-emergency"></i>
			}
			else
			{
				<i class="fa fa-info-circle p-message-admin"></i>
			}
			@ViewBag.Title
		</h1>

	</div>
	<div class="col-sm-5">
		<h3 class="text-right text-xs-left text-info">@Model.Timestamp.ToString("yyyy-MM-dd HH:mm:ss")</h3>
	</div>
</div>

<div class="row">
	<div class="col-xs-12">
		<p class="lead text-muted"><em>@Model.CapcodeUnitName</em></p>
	</div>
</div>

@Html.SuccessFromQueryString("attachment_removed", "1", "The attachment has been successfully removed.")

<p class="lead">@Model.MessageBody</p>

@if (Model.AdditionalMessages != null && Model.AdditionalMessages.Count > 0)
{
	<h4>Additional messages</h4>
	<div class="bottom-20">
		@foreach(var additionalMessage in Model.AdditionalMessages)
		{
		<p>
			<span class="text-info">@additionalMessage.Timestamp.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")</span><br />
			@additionalMessage.MessageContent
		</p>
		}
	</div>
}

<div id="job-tabs">

	<!-- Nav tabs -->
	<ul class="nav nav-tabs" role="tablist">
		<li role="presentation" class="active"><a href="#tab-overview" aria-controls="tab-overview" role="tab" data-toggle="tab" class="btn-icon"><i class="fa fa-fw fa-bar-chart"></i><span class="tab-title">Overview</span></a></li>
		<li role="presentation"><a href="#tab-members" aria-controls="tab-members" role="tab" data-toggle="tab" class="btn-icon" id="tab-header-members"><i class="fa fa-fw fa-address-book-o"></i><span class="tab-title">Members</span> (<span class="member-count">@Model.SignIns.Count</span>)</a></li>
		<li role="presentation"><a href="#tab-attachments" aria-controls="tab-attachments" role="tab" data-toggle="tab" class="btn-icon" id="tab-header-attachments" onclick="responseHub.attachments.preloadAttachments();"><i class="fa fa-fw fa-paperclip"></i><span class="tab-title">Attachments</span> (<span>@Model.Attachments.Count</span>)</a></li>
		<li role="presentation"><a href="#tab-location-info" aria-controls="tab-location-info" role="tab" data-toggle="tab" class="btn-icon" id="tab-header-location-info"><i class="fa fa-fw fa-crosshairs"></i><span class="tab-title">Location info</span></a></li>
	</ul>

	<!-- Tab panes -->
	<div class="tab-content">
		<div role="tabpanel" class="tab-pane active" id="tab-overview">

			@Html.Partial("JobProgress", Model)

			@Html.Partial("JobLocation", Model)

			@Html.Partial("JobNotes", Model.Notes)

		</div>

		<div role="tabpanel" class="tab-pane" id="tab-members">

			@Html.Partial("JobMembers", Model)

		</div>

		<div role="tabpanel" class="tab-pane" id="tab-attachments">

			@Html.Partial("JobAttachments", Model)

		</div>

		<div role="tabpanel" class="tab-pane" id="tab-location-info">


			<div class="row">
				<div class="col-sm-12 dist-from-lhq clearfix">
					<h3>Distance from LHQ:</h3>
					@if (Model.DistanceFromLhq.HasValue)
					{

						<p class="lead lhq-dist-set">@(Model.DistanceFromLhq.Value.ToString("0.0"))km</p>
					}
					else
					{

						<p class="lead"><i class="fa fa-fw fa-spin fa-spinner text-primary"></i></p>
					}
				</div>
			</div>

			<div class="row">
				<div class="col-sm-12" id="dist-between-jobs">

					<form id="">

						<h4>Distance from job</h4>
						<div class="form-group">
							<label for="Name">Job number *</label>
							<div class="row">
								<div class="col-sm-8 col-md-6 col-lg-4">
									@Html.TextBoxFor(model => model.DistanceFromJobNumber, new { @class = "form-control", placeholder = "S123456789" })
								</div>
							</div>
							@Html.ValidationMessageFor(model => model.DistanceFromJobNumber)
						</div>
						<button type="button" class="btn btn-primary btn-icon" onclick="responseHub.jobMessages.getDistanceBetweenJobs();"><i class="fa fa-search"></i>Find distance</button>

					</form>

					<div id="dist-results"></div>

				</div>
			</div>

		</div>
	</div>
</div>
