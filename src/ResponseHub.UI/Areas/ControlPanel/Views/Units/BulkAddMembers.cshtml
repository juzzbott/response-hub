@model Enivate.ResponseHub.UI.Areas.Admin.Models.Units.BulkMemberUploadViewModel

@{
	/**/

	ViewBag.Title = "Bulk add members";
	Layout = "~/Areas/ControlPanel/Views/Shared/_Layout.cshtml";
}

<h1>@ViewBag.Title</h1>

@if (!String.IsNullOrEmpty(Request.QueryString["invalid_session"]) && Request.QueryString["invalid_session"] == "1")
{
	<p class="alert alert-warning top-20">
		There was a problem retrieving the import file from the session. Please re-upload the file and try again.
	</p>
}

<p>Upload a file containing the user information to bulk add members to your unit.</p>

<p class="section-help">
	The file uploaded needs to be in CSV file format and contain the following fields: <em>EmailAddress,FirstName,LastName,MemberNumber,UserRole</em><br />
	<em>UserRole</em> must be either "General user" or "Unit administrator".<br />
	The file needs to contain the fields above as column headers.<br />
	<a href="@Request.Path/sample-csv-file">Download a sample data file</a>
</p>

@if (Model.InvalidDataFileColumns)
{
	<p class="alert alert-danger top-20">
		The file uploaded is not in the correct format. Check the format of the file and try again. A sample datafile can be downloaded from the help section above.
	</p>
}

<form action="@Request.Path" method="post" enctype="multipart/form-data" class="top-20">

	@Html.AntiForgeryToken()

	<div class="row">
		<div class="col-lg-10 col-xl-6">
			@Html.ValidationSummary(true)
		</div>
	</div>

	<div class="form-group">
		<label for="Service">CSV data file *</label>
		<div class="row">
			<div class="col-sm-8 col-md-6 col-lg-4">
				@Html.TextBoxFor(model => model.File, new { type = "file", @class = "form-control" })
			</div>
		</div>
		@Html.ValidationMessageFor(model => model.File)
	</div>

	<button type="submit" class="btn btn-default">Upload data file</button>
	<a href="/control-panel/units/@Model.UnitId" class="btn btn-link">Cancel</a>

</form>

@if (Model.FileUploaded && !Model.InvalidDataFileColumns)
{

	<h2>File summary</h2>
	<p class="lead">@Model.TotalMembersInFile member@(Model.TotalMembersInFile == 1 ? "" : "s") found in data file.</p>

	<div class="row">
		<div class="col-sm-3">
			<div class="event-overview-item event-unassigned-jobs-count text-success">
				<span>@Model.UsersToBeImported.Count</span>Users to be imported
			</div>
		</div>
		<div class="col-sm-3">
			<div class="event-overview-item event-total-jobs-count text-danger">
				<span>@Model.InvalidUsers.Count</span>Invalid users
			</div>
		</div>
		<div class="col-sm-3">
			<div class="event-overview-item event-in-progress-jobs-count text-info">
				<span>@Model.MembersToBeAddedToUnit.Count</span>Members to be added to unit
			</div>
		</div>
		<div class="col-sm-3">
			<div class="event-overview-item no-border event-completed-jobs-count text-muted">
				<span>@Model.ExistingUnitMembers.Count</span>Existing unit members
			</div>
		</div>
	</div>

	if (Model.InvalidUsers.Count > 0)
	{
		<div class="alert alert-muted">
			<p class="text-danger">
				<strong><a href="#invalid-users-container" data-toggle="collapse" expanded="true" aria-controls="invalid-users-container" aria-expanded="true" class="text-danger icon-link"><i class="fa fa-plus-circle"></i>@Model.InvalidUsers.Count invalid member@(Model.InvalidUsers.Count == 1 ? "" : "s") found. These users cannot be imported.</a></strong>
			</p>
			<div class="data-table-container collapse in" id="invalid-users-container" aria-expanded="true">
				<table class="table table-striped table-condensed table-responsive table-medium top-10 bottom-0">
					<thead>
						<tr>
							<th>Error message</th>
							<th>Email address</th>
							<th>First name</th>
							<th>Surname</th>
							<th>Member number</th>
							<th>User access type</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var memberItem in Model.InvalidUsers)
						{
							<tr>
								<td><span class="text-danger">@memberItem.Value</span></td>
								<td>@memberItem.Key.EmailAddress</td>
								<td>@memberItem.Key.FirstName</td>
								<td>@memberItem.Key.Surname</td>
								<td>@memberItem.Key.MemberNumber</td>
								<td>@memberItem.Key.UserAccessType</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	}

	if (Model.UsersToBeImported.Count > 0)
	{
		<div class="alert alert-muted">
			<p class="text-success">
				<strong><a href="#users-import-container" data-toggle="collapse" expanded="false" aria-controls="users-import-container" class="text-success icon-link"><i class="fa fa-plus-circle"></i>@Model.UsersToBeImported.Count member@(Model.UsersToBeImported.Count == 1 ? "" : "s") to be imported.</a></strong>
			</p>
			<div class="data-table-container collapse" id="users-import-container">
				<table class="table table-striped table-condensed table-responsive table-medium top-10 bottom-0">
					<thead>
						<tr>
							<th>Email address</th>
							<th>First name</th>
							<th>Surname</th>
							<th>Member number</th>
							<th>User access type</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var memberItem in Model.UsersToBeImported)
						{
							<tr>
								<td>@memberItem.EmailAddress</td>
								<td>@memberItem.FirstName</td>
								<td>@memberItem.Surname</td>
								<td>@memberItem.MemberNumber</td>
								<td>@memberItem.UserAccessType</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	}

	if (Model.MembersToBeAddedToUnit.Count > 0)
	{
		<div class="alert alert-muted">
			<p class="text-info">
				<strong><a href="#unit-added-container" data-toggle="collapse" expanded="false" aria-controls="users-import-container" class="text-info icon-link"><i class="fa fa-plus-circle"></i>@Model.MembersToBeAddedToUnit.Count existing member@(Model.MembersToBeAddedToUnit.Count == 1 ? "" : "s") to be added to the unit.</a></strong>
			</p>
			<div class="data-table-container collapse" id="unit-added-container">
				<table class="table table-striped table-condensed table-responsive table-medium top-10 bottom-0">
					<thead>
						<tr>
							<th>Email address</th>
							<th>First name</th>
							<th>Surname</th>
							<th>Member number</th>
							<th>User access type</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var memberItem in Model.MembersToBeAddedToUnit)
						{
							<tr>
								<td>@memberItem.EmailAddress</td>
								<td>@memberItem.FirstName</td>
								<td>@memberItem.Surname</td>
								<td>@memberItem.MemberNumber</td>
								<td>@memberItem.UserAccessType</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	}

	if (Model.ExistingUnitMembers.Count > 0)
	{
		<div class="alert alert-muted">
			<p class="text-muted">
				<strong><a href="#existing-users-container" data-toggle="collapse" expanded="false" aria-controls="users-import-container" class="text-muted icon-link"><i class="fa fa-plus-circle"></i>@Model.ExistingUnitMembers.Count member@(Model.ExistingUnitMembers.Count == 1 ? "" : "s") users already added to the unit. No action required for these users.</a></strong>
			</p>
			<div class="data-table-container collapse" id="existing-users-container">
				<table class="table table-striped table-condensed table-responsive table-medium top-10 bottom-0">
					<thead>
						<tr>
							<th>Email address</th>
							<th>First name</th>
							<th>Surname</th>
							<th>Member number</th>
							<th>User access type</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var memberItem in Model.ExistingUnitMembers)
						{
							<tr>
								<td>@memberItem.EmailAddress</td>
								<td>@memberItem.FirstName</td>
								<td>@memberItem.Surname</td>
								<td>@memberItem.MemberNumber</td>
								<td>@memberItem.UserAccessType</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
	}

	<p>
		<a href="@Request.Path/import-members" class="btn btn-primary btn-icon"><i class="fa fa-upload"></i>Import members</a>
		<a href="/control-panel/units/@Model.UnitId" class="btn btn-link">Cancel</a>
	</p>

}

