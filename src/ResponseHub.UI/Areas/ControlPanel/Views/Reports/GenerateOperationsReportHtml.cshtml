@model Enivate.ResponseHub.UI.Areas.ControlPanel.Models.Reports.Operations.OperationsReportViewModel
@using Enivate.ResponseHub.Common.Extensions;
@{
	ViewBag.Title = "Operations export";
	if (Model.UseStandardLayout)
	{
		Layout = "~/Areas/ControlPanel/Views/Shared/_Layout.cshtml";
	}
	else
	{
		Layout = "~/Areas/ControlPanel/Views/Shared/HtmlExportLayout.cshtml";
	}
}

<div class="generated-report">

	<h1 class="text-primary">Job data report</h1>

	<p class="lead text-info">
		Report contains @Model.Jobs.Count job@(Model.Jobs.Count != 1 ? "s" : "") and @Model.Messages.Count message@(Model.Messages.Count != 1 ? "s" : "")
		between @Model.StartDate.ToLocalTime().ToString("yyyy-MM-dd") and @Model.FinishDate.ToLocalTime().ToString("yyyy-MM-dd").
	</p>

	<h2>Jobs</h2>

	<table class="table table-striped results-overview">
		<thead>
			<tr>
				<th class="job-number">Job Number</th>
				<th class="date-time">Date/Time</th>
				<th class="message">Details</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var message in Model.Jobs)
			{
				<tr>
					<td>@message.JobNumber</td>
					<td>@message.Timestamp.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</td>
					<td>@message.MessageContent</td>
				</tr>
			}
		</tbody>
	</table>

	@foreach (var message in Model.Jobs)
	{
		<div class="job-message-detail" style="page-break-before: always">
			<h3 class="text-primary">@message.JobNumber</h3>
			<p class="text-muted">Time: @message.Timestamp.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss") | Priority: @message.Priority.GetEnumDescription() | Capcode: @message.Capcode | Job id: @message.Id</p>
			<p class="lead">@message.MessageContent</p>

			@if (message.Location != null)
			{
				<div class="location-info">
					<p>
						Map reference: @message.Location.MapReference
						@if (message.Location.Coordinates != null && !message.Location.Coordinates.IsEmpty())
					{
							<br />
							@:GPS Coordinates: @message.Location.Coordinates.ToString()
					}
					</p>
					@if (message.Location.Coordinates != null && !message.Location.Coordinates.IsEmpty())
					{
						<p class="message-map-image">
							<img src="@System.Configuration.ConfigurationManager.AppSettings["BaseWebsiteUrl"]/media/mapbox-static/@message.Location.Coordinates.Latitude,@message.Location.Coordinates.Longitude,13/900x350" width="900" height="300" />
							<span><img src="~/assets/images/map-marker.png" width="48" height="48" /></span>
						</p>
					}
				</div>
			}

			<table class="table job-progress-table">
				<thead>
					<tr>
						<th class="on-route"><h4>On route</h4></th>
						<th><h4>On scene</h4></th>
						<th><h4>Job clear</h4></th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td class="on-route">
							@{
								var onRoute = message.ProgressUpdates.FirstOrDefault(i => i.ProgressType == Enivate.ResponseHub.Model.Messages.MessageProgressType.OnRoute);
								if (onRoute != null)
								{
									<span class="btn-icon"><i class="fa fa-fw fa-clock-o"></i>@onRoute.Timestamp.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</span><br />
								}
								else
								{
									@: Not available
							}
							}
						</td>
						<td>
							@{
								var onScene = message.ProgressUpdates.FirstOrDefault(i => i.ProgressType == Enivate.ResponseHub.Model.Messages.MessageProgressType.OnScene);
								if (onScene != null)
								{
									<span class="btn-icon"><i class="fa fa-fw fa-clock-o"></i>@onScene.Timestamp.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</span><br />
								}
								else
								{
									@: Not available
							}
							}
						</td>
						<td>
							@{
								var jobClear = message.ProgressUpdates.FirstOrDefault(i => i.ProgressType == Enivate.ResponseHub.Model.Messages.MessageProgressType.JobClear);
								if (jobClear != null)
								{
									<span class="btn-icon"><i class="fa fa-fw fa-clock-o"></i>@jobClear.Timestamp.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</span><br />
								}
								else
								{
									@: Not available
							}
							}
						</td>
					</tr>
				</tbody>
			</table>

			<div class="row">
				<div class="col-xs-12">
					<h4>Notes</h4>

					@if (message.Notes.Count == 0)
				{
						<p>No notes available.</p>
				}
				else
				{

						<ul class="list-unstyled notes">
							@foreach (var note in message.Notes)
							{
								<li>
									<small class="text-muted">
										<i class="fa fa-clock-o"></i> @note.Created.ToLocalTime().ToString("yyyy-MM-dd HH:mm:ss")
										@if (note.IsWordBack)
										{
											@Html.Raw("<i class=\"fa fa-commenting-o wordback-icon\"></i> wordback")
										}
									</small>
									<p class="text-info">@note.Body</p>
								</li>
							}
						</ul>

					}

				</div>
			</div>

		</div>
								}

	<h2 style="page-break-before: always">Messages</h2>

	<table class="table table-striped results-overview">
		<thead>
			<tr>
				<th class="date-time">Date/Time</th>
				<th class="message">Message</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var message in Model.Messages)
			{
				<tr>
					<td>@message.Timestamp.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</td>
					<td>@message.MessageContent</td>
				</tr>
			}
		</tbody>
	</table>

</div>